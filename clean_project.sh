#!/bin/bash

echo "üî¥ ATEN√á√ÉO M√ÅXIMA!"
echo "Este script √© DESTRUTIVO. Ele:"
echo " - Apaga o banco de dados (db.sqlite3)"
echo " - Remove todas as migra√ß√µes (exceto __init__.py)"
echo " - Limpa cache Python (__pycache__ e .pyc)"
echo ""
read -p "Voc√™ tem certeza que quer continuar? (s/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Ss]$ ]]; then
    echo "‚ùå Opera√ß√£o cancelada."
    exit 1
fi

echo ""
echo "üìÅ Entrando na pasta backend..."
cd backend || { echo "‚ùå Pasta backend n√£o encontrada! Abortando."; exit 1; }

echo "üí£ Removendo banco de dados (db.sqlite3)..."
[ -f db.sqlite3 ] && rm db.sqlite3 && echo "‚úÖ Banco removido." || echo "‚ÑπÔ∏è Nenhum banco encontrado."

echo ""
echo "üßπ Limpando cache do Python (.pyc e __pycache__)..."
find . -name "__pycache__" -type d -exec rm -rf {} +
find . -name "*.pyc" -delete
echo "‚úÖ Cache limpo."

echo ""
echo "üî• Removendo arquivos de migra√ß√£o (exceto __init__.py)..."
for app_path in */ ; do
    MIGRATIONS_DIR="${app_path}migrations"
    if [ -d "$MIGRATIONS_DIR" ]; then
        echo "  ‚û§ Limpando: $MIGRATIONS_DIR"
        find "$MIGRATIONS_DIR" -type f -name "0*.py" ! -name "__init__.py" -delete
    fi
done
echo "‚úÖ Migra√ß√µes limpas."

echo ""
echo "‚úÖ Projeto resetado com sucesso!"
echo "‚û°Ô∏è Agora voc√™ pode rodar:"
echo "   python manage.py makemigrations"
echo "   python manage.py migrate"