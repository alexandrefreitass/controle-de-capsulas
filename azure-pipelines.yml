<<<<<<< HEAD
# azure-pipelines.yml
trigger:
- main

stages:
- stage: Backend_Tests
  displayName: 'Backend Tests'
  jobs:
  - job: DjangoTests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
        addToPath: true
    
    - script: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
      displayName: 'Install dependencies'
    
    - script: |
        cd backend
        python manage.py check
        python manage.py test
      displayName: 'Run Django tests'

- stage: Frontend_Tests
  displayName: 'Frontend Tests'
  jobs:
  - job: ReactTests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'
      
    - script: |
        cd frontend
        npm install
        npm test -- --watchAll=false
      displayName: 'Run React tests'

- stage: Build_Deploy
  displayName: 'Build and Deploy'
  dependsOn:
  - Backend_Tests
  - Frontend_Tests
  condition: succeeded()
  jobs:
  - job: BuildFrontend
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'
      
    - script: |
        cd frontend
        npm install
        npm run build
      displayName: 'Build React app'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'frontend/build'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        replaceExistingArchive: true
      displayName: 'Archive frontend build files'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        artifactName: 'frontend'
      displayName: 'Publish frontend artifact'
  
  - job: BuildBackend
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
        addToPath: true
    
    - script: |
        cd backend
        pip install -r requirements.txt
        python manage.py collectstatic --noinput
      displayName: 'Prepare Django app'
      
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'backend'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/backend.zip'
        replaceExistingArchive: true
      displayName: 'Archive backend files'
      
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/backend.zip'
        artifactName: 'backend'
      displayName: 'Publish backend artifact'
=======
# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python38:
      PYTHON_VERSION: '3.8'
    Python39:
      PYTHON_VERSION: '3.9'
    Python310:
      PYTHON_VERSION: '3.10'
  maxParallel: 3

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install prerequisites'

- script: |
    python manage.py test
  displayName: 'Run tests'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/TEST-*.xml'
    testRunTitle: 'Python $(PYTHON_VERSION)'
  condition: succeededOrFailed()
>>>>>>> bd4a5052952290022b8adea53812b314c43b3ba1
